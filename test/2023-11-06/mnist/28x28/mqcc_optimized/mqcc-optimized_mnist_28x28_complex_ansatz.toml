module = "qcc.ml.quantum.MQCCNonHybrid"
dataset = "torchvision.datasets.MNIST"
optimizer = "torch.optim.Adam"
loss = "torch.nn.CrossEntropyLoss"
transform = "qcc.ml.data.ClassicalImageTransform"
dimensions = [28, 28, 1]
num_layers = 5
classes = [0, 1]
epoch = 8
batch_size = [8, 16]
num_trials = 5
classical = true
verbose = true

[module_options]
ansatz = "qcc.quantum.pennylane.ansatz.MQCCOptimized"
num_features = 4
U_filter = "qcc.quantum.pennylane.c2q.ConvolutionComplexAngleFilter"
U_fully_connected = "qcc.ml.quantum.AnsatzFilter"

[optimizer_options]
lr = 0.001
